{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/ToDos/ToDos/src/Task/Task.tsx\";\nimport React from \"react\";\nimport './Task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Task(props) {\n  const onClickHandler = () => {\n    props.removeTask(props.task.id);\n  };\n  const onChangeHandler = e => {\n    props.changeStatus(props.task.id, e.currentTarget.checked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: props.task.isDone ? 'isDone' : '',\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: onChangeHandler,\n      checked: props.task.isDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: props.task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickHandler,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, props.task.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Task","props","onClickHandler","removeTask","task","id","onChangeHandler","e","changeStatus","currentTarget","checked","className","isDone","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","_c","$RefreshReg$"],"sources":["/Users/rezanceva96/ToDos/ToDos/src/Task/Task.tsx"],"sourcesContent":["import React, { ChangeEvent } from \"react\";\nimport './Task.css';\n\n\ntype PropsType = {\n    task: Object\n    removeTask: (id: string) => void\n    changeStatus: (id: string, isDone: boolean) => void\n}\n\nfunction Task(props: PropsType) {\n\n    const onClickHandler = () => {\n        props.removeTask(props.task.id)\n    }\n\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        props.changeStatus(props.task.id, e.currentTarget.checked)\n    }\n\n    return (\n        <li key={props.task.id} className={props.task.isDone ? 'isDone' : ''}>\n            <input type='checkbox' onChange={onChangeHandler} checked={props.task.isDone} />\n            <span>{props.task.title}</span>\n            <button onClick={onClickHandler}>X</button>\n        </li>\n    )\n\n\n}\n\nexport default Task;"],"mappings":";AAAA,OAAOA,KAAK,MAAuB,OAAO;AAC1C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASpB,SAASC,IAAIA,CAACC,KAAgB,EAAE;EAE5B,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzBD,KAAK,CAACE,UAAU,CAACF,KAAK,CAACG,IAAI,CAACC,EAAE,CAAC;EACnC,CAAC;EAED,MAAMC,eAAe,GAAIC,CAAgC,IAAK;IAC1DN,KAAK,CAACO,YAAY,CAACP,KAAK,CAACG,IAAI,CAACC,EAAE,EAAEE,CAAC,CAACE,aAAa,CAACC,OAAO,CAAC;EAC9D,CAAC;EAED,oBACIX,OAAA;IAAwBY,SAAS,EAAEV,KAAK,CAACG,IAAI,CAACQ,MAAM,GAAG,QAAQ,GAAG,EAAG;IAAAC,QAAA,gBACjEd,OAAA;MAAOe,IAAI,EAAC,UAAU;MAACC,QAAQ,EAAET,eAAgB;MAACI,OAAO,EAAET,KAAK,CAACG,IAAI,CAACQ;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChFpB,OAAA;MAAAc,QAAA,EAAOZ,KAAK,CAACG,IAAI,CAACgB;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC/BpB,OAAA;MAAQsB,OAAO,EAAEnB,cAAe;MAAAW,QAAA,EAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,GAHtClB,KAAK,CAACG,IAAI,CAACC,EAAE;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIlB,CAAC;AAIb;AAACG,EAAA,GAnBQtB,IAAI;AAqBb,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}