{"ast":null,"code":"var _jsxFileName = \"/Users/rezanceva96/ToDos/ToDos/src/TodoList/ToDoList.tsx\";\nimport './ToDoList.css';\nimport React from 'react';\nimport AddTaskForm from '../AddTaskForm/AddTaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList(props) {\n  const onAllClickHandler = () => props.changeFilter('all');\n  const onActiveClickHandler = () => props.changeFilter('active');\n  const onCompletedClickHandler = () => props.changeFilter('completed');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      addTask: props.addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.tasks.map(task => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: task.isDone ? 'isDone' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: onChangeHandler,\n            checked: task.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClickHandler,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: props.filter === 'all' ? 'active-filter' : '',\n        onClick: onAllClickHandler,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: props.filter === 'active' ? 'active-filter' : '',\n        onClick: onActiveClickHandler,\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: props.filter === 'completed' ? 'active-filter' : '',\n        onClick: onCompletedClickHandler,\n        children: \"Complited\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","AddTaskForm","jsxDEV","_jsxDEV","ToDoList","props","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","children","title","fileName","_jsxFileName","lineNumber","columnNumber","addTask","tasks","map","task","className","isDone","type","onChange","onChangeHandler","checked","onClick","onClickHandler","id","filter","_c","$RefreshReg$"],"sources":["/Users/rezanceva96/ToDos/ToDos/src/TodoList/ToDoList.tsx"],"sourcesContent":["import './ToDoList.css';\nimport React, { ChangeEvent } from 'react';\nimport { FilterValuesType } from '../App/App';\nimport AddTaskForm from '../AddTaskForm/AddTaskForm';\nimport Task from '../Task/Task';\n\nexport type TaskType = {\n    id: string\n    title: string\n    isDone: boolean\n}\n\ntype PropsType = {\n    title: string\n    tasks: Array<TaskType>\n    removeTask: (id: string) => void\n    changeFilter: (value: FilterValuesType) => void\n    addTask: (value: string) => void\n    changeStatus: (id: string, isDone: boolean) => void\n    filter: FilterValuesType\n}\n\nfunction ToDoList(props: PropsType) {\n\n\n    const onAllClickHandler = () => props.changeFilter('all');\n    const onActiveClickHandler = () => props.changeFilter('active');\n    const onCompletedClickHandler = () => props.changeFilter('completed');\n\n\n    return (\n        <div>\n            <h1>{props.title}</h1>\n\n            <AddTaskForm addTask={props.addTask} />\n\n    \n            <ul>\n                {\n                    props.tasks.map((task) => {\n\n                \n                        return (\n                            <li key={task.id} className={task.isDone ? 'isDone': ''}>\n                                <input type='checkbox' onChange={onChangeHandler} checked={task.isDone} />\n                                <span>{task.title}</span>\n                                <button onClick={onClickHandler}>X</button>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n\n            <div>\n                <button className={props.filter === 'all' ? 'active-filter' : ''} onClick={onAllClickHandler}>All</button>\n                <button className={props.filter === 'active' ? 'active-filter' : ''} onClick={onActiveClickHandler}>Active</button>\n                <button className={props.filter === 'completed' ? 'active-filter' : ''} onClick={onCompletedClickHandler}>Complited</button>\n            </div>\n\n        </div>\n    );\n}\n\nexport default ToDoList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}